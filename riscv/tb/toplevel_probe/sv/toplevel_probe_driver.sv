`ifndef TOPLEVEL_PROBE_DRIVER_SV
`define TOPLEVEL_PROBE_DRIVER_SV

class toplevel_probe_driver extends uvm_driver #(tx);

  `uvm_component_utils(toplevel_probe_driver)

  virtual toplevel_probe_if vif;

  toplevel_probe_config     m_config;

  extern function new(string name, uvm_component parent);

  // Methods run_phase and do_drive generated by setting driver_inc in file ./toplevel_probe.tpl
  extern task run_phase(uvm_phase phase);
  // TODO
  // extern task do_drive();

endclass : toplevel_probe_driver 


function toplevel_probe_driver::new(string name, uvm_component parent);
  super.new(name, parent);
endfunction : new


task toplevel_probe_driver::run_phase(uvm_phase phase);
  `uvm_info(get_type_name(), "run_phase", UVM_HIGH)

  forever
  begin
    seq_item_port.get_next_item(req);
      `uvm_info(get_type_name(), {"req item\n",req.sprint}, UVM_HIGH)
    // do_drive();
    seq_item_port.item_done();
  end
endtask : run_phase


// Start of inlined include file generated_tb/tb/include/dummy.sv
// End of inlined include file

`endif // TOPLEVEL_PROBE_DRIVER_SV

